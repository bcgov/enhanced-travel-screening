name: Deploy Lambda Function

on:
  push:
    tags:
      - lambda-prod

env:
  REGION: ${{ secrets.REGION }}
  LAMBDA_FUNC1: etsToSbc
  LAMBDA_FUNC2: phacToSbc
  LAMBDA_LAYER: common

jobs:
  deploy:
    name: Deploy to AWS Lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Zip common layer and ship to AWS Lambda
        working-directory: ./server/lambda/layer/common
        run: |
          npm install --prefix nodejs
          zip -r lambdaLayer.zip .
          echo ::set-env name=LAYER_ARN::$(aws lambda publish-layer-version --compatible-runtimes nodejs12.x --layer-name ${{ env.LAMBDA_LAYER }} --zip-file fileb://${PWD}/lambdaLayer.zip | jq '.LayerVersionArn' -r)

      - name: Zip lambda function 1 folder and ship to AWS Lambda
        working-directory: ./server/lambda/${{ env.LAMBDA_FUNC1 }}
        run: |
          echo ${GITHUB_SHA} > commit_hash.txt
          zip -r lambdaFunc.zip .
          aws lambda update-function-code --function-name ${{ env.LAMBDA_FUNC1 }} --zip-file fileb://${PWD}/lambdaFunc.zip | tail -n 0
          aws lambda update-function-configuration --function-name ${{ env.LAMBDA_FUNC1 }} --layers ${LAYER_ARN} | tail -n 0

      - name: Zip lambda function 2 folder and ship to AWS Lambda
        working-directory: ./server/lambda/${{ env.LAMBDA_FUNC2 }}
        run: |
          echo ${GITHUB_SHA} > commit_hash.txt
          zip -r lambdaFunc.zip .
          aws lambda update-function-code --function-name ${{ env.LAMBDA_FUNC2 }} --zip-file fileb://${PWD}/lambdaFunc.zip | tail -n 0
          aws lambda update-function-configuration --function-name ${{ env.LAMBDA_FUNC2 }} --layers ${LAYER_ARN} | tail -n 0



