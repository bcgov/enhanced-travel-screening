name: Blue-Green - Build and Deploy to Dev

on:
  push:
    tags:
      - 'dev'

env:
  ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  PROJECT: enhanced-travel-screening
  DEPLOY_ENV: enhanced-travel-screening-dev
  REGION: ca-central-1

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: NPM Audit
        run: |
          cd "$GITHUB_WORKSPACE/client" && npm audit --audit-level=moderate --production
          cd "$GITHUB_WORKSPACE/server" && npm audit --audit-level=moderate
          cd "$GITHUB_WORKSPACE"

  deploy:
    name: Deploy to Dev
    needs: test
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Build Image
        run: make pipeline-build

      - name: Push Image to ECR
        run: make gh-pipeline-push

      - name: Extract current EB environment name
        shell: bash
        run: echo "##[set-output name=env;]$(make gh-get-current-aws-env)"
        id: current_env_name

      - name: Extract current date
        shell: bash
        run: echo "##[set-output name=date;]$(date '+%Y%m%d%H%M')"
        id: extract_date

      - name: Clone EB enviroment
        uses: mauriciofreshw/actions-aws-eb@v1.0.0
        with:
          command: 'clone ${{ steps.current_env_name.outputs.env }} --clone_name ${{ env.DEPLOY_ENV }}-${{ steps.extract_date.outputs.date }} --exact --verbose'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.REGION }}

      - name: Creating EB Deployment Artifact
        run: make gh-pipeline-deploy-prep

      - name: Deploying Version to cloned EB environment
        run: make gh-pipeline-deploy-bg-version CLONED_ENV=${{ env.DEPLOY_ENV }}-${{ steps.extract_date.outputs.date }}
